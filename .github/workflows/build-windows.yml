name: Windows Build

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  build-windows:
    name: Build for Windows
    runs-on: windows-latest
    env:
      VCPKG_DIR: ${{ github.workspace }}/vcpkg

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Qt
      uses: jurplel/setup-qt-action@v2
      with:
        version: 6.5.3
        dir: ${{ github.workspace }}/Qt
        arch: win64_msvc2019_64
        modules: qtbase qttools qt5compat

    - name: Install build tools
      run: |
        choco install -y cmake --installargs 'ADD_CMAKE_TO_PATH=System'
        choco install -y ninja

    - name: Setup vcpkg
      run: |
        git clone https://github.com/microsoft/vcpkg.git
        & "${{ env.VCPKG_DIR }}/bootstrap-vcpkg.bat"

    - name: Install dependencies
      run: |
        & "${{ env.VCPKG_DIR }}/vcpkg" install ^
            flac ^
            libsndfile ^
            taglib ^
            chromaprint

    - name: Configure CMake
      shell: cmd
      run: |
        cmake -B build -S . ^
          -G Ninja ^
          -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_DIR }}/scripts/buildsystems/vcpkg.cmake" ^
          -DCMAKE_PREFIX_PATH="${{ github.workspace }}/Qt/6.5.3/msvc2019_64" ^
          -DCMAKE_BUILD_TYPE=Release

    - name: Build project
      run: cmake --build build --config Release --parallel

    - name: Deploy Qt libraries
      run: |
        windeployqt ^
          build/Release/flacon.exe ^
          --release ^
          --no-compiler-runtime ^
          --dir build/deploy

    - name: Create portable package
      shell: powershell
      run: |
        Compress-Archive -Path build/deploy/* -DestinationPath flacon-portable.zip

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: flacon-windows
        path: flacon-portable.zip
